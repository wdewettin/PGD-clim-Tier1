#!/bin/bash
#PBS -V
#PBS -N 2climake
#PBS -l walltime=01:59:00
#PBS -l mem=62GB
#PBS -l nodes=1:ppn=1
#PBS -A 2022_205

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   
#   Job #2
#
#   Building of the PGD for climatological files building;
#
#   This file has to be in FA format to be read by the 923 conf later;
#
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


set -ex

if [[ -z "$NSMAX_ORO" && -z "$NMSMAX_ORO" ]]; then
    SPECTRALS_PARAMS=$NSMAX","$NMSMAX  
elif [ -z "$NSMAX_ORO" ] || [ -z "$NMSMAX_ORO" ]; then
  echo "something went wrong, one of two variables is empty. NSMAX_ORO=$NSMAX_ORO and NMSMAX_ORO=$NMSMAX_ORO"
else
    SPECTRALS_PARAMS=$NSMAX","$NMSMAX"@"$NSMAX_ORO","$NMSMAX_ORO           
fi


cd $CLIMAKEWORKDIR
[ ! -d 0_build_pgd ] && mkdir 0_build_pgd 
cd 0_build_pgd

# Input needed in this job
#If you want to change the orography input dabatase and take the GMTED 30s file replace 
#GMTED2010_OROGRAPHY_07S5 with GMTED2010_OROGRAPHY_30S0 in the NEEDED_INPUTS variable above

NEEDED_INPUTS=(HWSD_CLAY HWSD_SAND ECOCLIMAP_I_SURFACE_TYPE GMTED2010_OROGRAPHY_30S0 ECOCLIMAP_COVERS_PARAM MASTER_PGD NAMELIST_AROME)
# variables in gget
# VARIABLES=$(/home/mf/dp/marp/martinezs/public/bin/genv $CYCLE)
VARIABLES=$(cat ${CLIMAKEDIR}/variables/variables_${CYCLE}.txt)

# construct GENVDICT dictionnary
declare -A GENVDICT
for i in $VARIABLES
do
  key=$(echo $i | cut -d "=" -f1)
  value=$(echo $i | cut -d "\"" -f2)
  GENVDICT["$key"]=$value
done

echo '---------------------------'
echo '==========================='
echo '******0_build_pgd   --->   Workdir is '$CLIMAKEWORKDIR'*****'
echo '==========================='
echo '***************************'
echo '                           '



#
#     Databases searching
#
for i in ${NEEDED_INPUTS[@]}
do
  # /home/mf/dp/marp/martinezs/public/bin/gget ${GENVDICT[$i]}
  cp -rv ${DATA_DIR}/${GENVDICT[$i]} .
  # cp -rv /dodrio/scratch/projects/2022_200/project_input/RMIB-UGent/vsc41138_michiel/climake/climake_data/${GENVDICT[$i]} .
  if [ "${GENVDICT[$i]: -2}" == "gz" ] ; then
       echo "untaring..."
      tar -xvf ${GENVDICT[$i]}
  fi  
done

#
#     Namelist
#

if [ "$PGDNAM" == "GCO" ];then
  cat ${GENVDICT[NAMELIST_AROME]}'/arome/namel_buildpgd' > OPTIONS.nam
elif [ "$PGDNAM" == "GCO_POSTPRO" ];then
  cat ${GENVDICT[NAMELIST_BDAP]}'/bdap/namel_buildpgd' > OPTIONS.nam
else
  cat $PGDNAM > OPTIONS.nam
fi  

#shortcut for xpnam tool, which is a namelist editing tool
XPNAM=$CLIMAKEDIR'/stuff/xpnam'
$XPNAM -i --dfile=$PGDGEO OPTIONS.nam # Modifications from $PGDGEO are added to OPTIONS.nam in place

if [ "$CUSTOM_PGD" == "GENERIC" ]; then
  #default binary
  cp ${GENVDICT[MASTER_PGD]} pgd.exe 
else
  cp $CUSTOM_PGD pgd.exe
fi  

echo '  ------------EXPORTING ENV VARIABLES  ------------ '
source $CLIMAKEDIR'/stuff/environmentVariables'
echo '  ------------------------------------------------- '



echo '  ------------EXPORTING NAMELIST  ----------------- '
cat OPTIONS.nam
echo '  ------------------------------------------------- '


# Run PGDHACK
if [ "$PGDHACK" != "NOPGDHACK" ]; then
    chmod +x "$PGDHACK"
    "$PGDHACK"
fi



time ./pgd.exe
codrep=$?
if [ $codrep -ne 0 ] ;then
  echo '  ------------------------------------------------- '
  echo '  2climake FAILED during PGD'
  exit $coderep
else
  if [ ! -f "PGD.fa" ]; then
    echo "PGD fa file has not been produced! error during PGD... Aborting"
    exit 1
  else 
    echo '  2climake PGD was succesful!'
  fi 
fi   

ls -l

mv LISTING_PGD.txt $OUTPUTDIR'/listings/listing.pgd'

PGDFA=$OUTPUTDIR'/PGD.fa'
echo $PGDFA   

cp PGD.fa $PGDFA

cd $CLIMAKEDIR

qsub -o $OUTPUTDIR/log/3climake.o \
     -e $OUTPUTDIR/log/3climake.e \
     	-v  PGDGEO=$PGDGEO,CLIMGEO=$CLIMGEO,CYCLE=$CYCLE,PGDNAM=$PGDNAM,CLIMNAM=$CLIMNAM,OROGRAPHY_TRUNCATION=$OROGRAPHY_TRUNCATION,OTHERFIELDS_TRUNCATION=$OTHERFIELDS_TRUNCATION,CLIMAKEDIR=$CLIMAKEDIR,OUTPUTDIR=$OUTPUTDIR,CUSTOM_MASTER=$CUSTOM_MASTER,CUSTOM_PGD=$CUSTOM_PGD,CLIMAKEWORKDIR=$CLIMAKEWORKDIR,E923_UPDATE=$E923_UPDATE,DATA_DIR=$DATA_DIR,PGDHACK=$PGDHACK,NSMAX=$NSMAX,NMSMAX=$NMSMAX,NSMAX_ORO=$NSMAX_ORO,NMSMAX_ORO=$NMSMAX_ORO \
      scripts/3_job_923
#sbatch --output=$OUTPUTDIR/log/3climake.o --error=$OUTPUTDIR/log/3climake.e scripts/3_job_923 $PGDGEO $CLIMGEO $CYCLE $PGDNAM $CLIMNAM $OROGRAPHY_TRUNCATION $OTHERFIELDS_TRUNCATION $CLIMAKEDIR $OUTPUTDIR $CUSTOM_MASTER $CUSTOM_PGD $SPECTRALS_PARAMS $CLIMAKEWORKDIR $E923_UPDATE $DATA_DIR


