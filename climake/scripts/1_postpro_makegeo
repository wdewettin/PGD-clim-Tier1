#!/bin/bash
#PBS -V
#PBS -N 1climake
#PBS -l walltime=00:05:00
#PBS -l mem=62GB
#PBS -l nodes=1:ppn=1
#PBS -A 2022_205

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   
#   Job #1
#
#   Prefetch files and calculate geometry
#   this script permit to prefetch the files needed for the next steps. It also use Vortex+Epygram program to compute geometry and generate the proper namelists deltas (see comments in scripts/epy_makegeometry.py)
#   In fact, on Meteo France supercomputer, FTP commands to the archive system (used by GENV/GGET in background) are only available
#   on 'transfert' nodes (that's why here partition=transfert) and not in 'calculus' nodes. It download files in cache, to ensure
#   that they will be available for the next steps. The GENV cycle must be given by argument 
#   
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

set -ex
#get genv variables
# VARIABLES=$(/home/mf/dp/marp/martinezs/public/bin/genv $CYCLE)
VARIABLES=$(cat ${CLIMAKEDIR}/variables/variables_${CYCLE}.txt)

set -e
#check if $CYCLE is a proper GENV CYCLE
# if [ "${VARIABLES[0]}" = "CYCLE_NAME=\"not found\"" ]; then
#   echo 'GENV Cycle seem wrong: you gave '$CYCLE
#   echo '/home/mf/dp/marp/martinezs/public/bin/gget '$CYCLE' must return key/value list. Aborting'
#   exit $?
# fi

#looping on key/values and prefetch files (see above for the reason why we do that)
# for i in $VARIABLES
# do
#   if [ "$(echo $i | cut -d "=" -f1)" = "CYCLE_NAME" ]; then
#    continue
#   fi
#   j=$(echo $i | cut -d "\"" -f2)
#   echo 'calling gget on '$j
#   /home/mf/dp/marp/martinezs/public/bin/gget path --verbose $j || :
# done



echo 'Job 1_fetch_files ended correctly!'

#idem -> one orography step
OROGRAPHY_TRUNCATION="QUADRATIC"
OTHERFIELDS_TRUNCATION="QUADRATIC"
#idem : no spectral in lat/lon clim 
NSMAX="NONE"
NMSMAX="NONE"

SPECTRALS_PARAMS=$NSMAX","$NMSMAX
#idem special string to take the proper genv namelist
PGDNAM="GCO_POSTPRO"
CLIMNAM="GCO_POSTPRO"

cd $CLIMAKEDIR
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


echo "RUN WITH PGD"
qsub -o $OUTPUTDIR/log/2climake.o \
	-e $OUTPUTDIR/log/2climake.e \
	-v  PGDGEO=$PGDGEO,CLIMGEO=$CLIMGEO,CYCLE=$CYCLE,PGDNAM=$PGDNAM,CLIMNAM=$CLIMNAM,OROGRAPHY_TRUNCATION=$OROGRAPHY_TRUNCATION,OTHERFIELDS_TRUNCATION=$OTHERFIELDS_TRUNCATION,CLIMAKEDIR=$CLIMAKEDIR,OUTPUTDIR=$OUTPUTDIR,CUSTOM_MASTER=$CUSTOM_MASTER,CUSTOM_PGD=$CUSTOM_PGD,CLIMAKEWORKDIR=$CLIMAKEWORKDIR,E923_UPDATE=$E923_UPDATE,DATA_DIR=$DATA_DIR,PGDHACK=$PGDHACK,NSMAX=$NSMAX,NMSMAX=$NMSMAX,NSMAX_ORO=$NSMAX_ORO,NMSMAX_ORO=$NMSMAX_ORO \
	scripts/2_make_pgd  #sbatch --output=$OUTPUTDIR/log/2climake.o --error=$OUTPUTDIR/log/2climake.e scripts/2_make_pgd $PGDGEO $CLIMGEO $CYCLE $PGDNAM $CLIMNAM $OROGRAPHY_TRUNCATION $OTHERFIELDS_TRUNCATION $CLIMAKEDIR $OUTPUTDIR $CUSTOM_MASTER $CUSTOM_PGD $SPECTRALS_PARAMS $CLIMAKEWORKDIR $E923_UPDATE $DATA_DIR $PGDHACK

exit $?